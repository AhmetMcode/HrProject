@using System.Security.Claims
<div class="card">
    <div class="card-body">
        <h2>İş Sağlığı ve Güvenliği Hatası Ekle</h2>
        <form asp-action="Create" method="post" enctype="multipart/form-data">
            <input type="hidden" name="ReportedById" value="@User.FindFirstValue(ClaimTypes.NameIdentifier)" />
            <div class="form-group">
                <label for="PersonId">Personel Seç</label>
                <select class="form-control" id="PersonId" name="PersonId">
                    <option value="">Personel Seçin</option>
                    @foreach (var person in Model.Persons)
                    {
                        <option value="@person.Id">@person.Name @person.Surname</option>
                    }
                </select>
            </div>
            <div class="form-group">
                <label for="Description">Açıklama</label>
                <textarea class="form-control" id="Description" name="Description" placeholder="Hata ile ilgili açıklama" required></textarea>
            </div>
            <div class="form-group">
                <label for="CategoryId">Kategori</label>
                <div class="input-group">
                    <select class="form-control" id="CategoryId" name="CategoryId" required>
                        @if (ViewBag.Categories != null)
                        {
                            @foreach (var category in ViewBag.Categories)
                            {
                                <option value="@category.Id">@category.Name</option>
                            }
                        }
                        else
                        {
                            <option disabled>Kategori Yok</option>
                        }
                    </select>
                    <div class="input-group-append">
                        <button type="button" class="btn btn-outline-success" data-toggle="modal" data-target="#addCategoryModal" title="Kategori Ekle">
                            <i class="fas fa-plus-circle"></i>
                        </button>
                        <button type="button" class="btn btn-outline-primary" data-toggle="modal" data-target="#editCategoryModal" title="Kategori Düzenle">
                            <i class="fas fa-edit"></i>
                        </button>
                        <button type="button" class="btn btn-outline-danger" data-toggle="modal" data-target="#deleteCategoryModal" title="Kategori Sil">
                            <i class="fas fa-trash-alt"></i>
                        </button>
                    </div>
                </div>
            </div>

            <div class="form-group">
                <label for="SubCategoryId">Alt Kategori</label>
                <div class="input-group">
                    <select class="form-control" id="SubCategoryId" name="SubCategoryId" required>
                        <option value="">Lütfen önce bir kategori seçin</option>
                    </select>
                    <div class="input-group-append">
                        <button type="button" class="btn btn-outline-success" data-toggle="modal" data-target="#addSubCategoryModal" title="Alt Kategori Ekle">
                            <i class="fas fa-plus-circle"></i>
                        </button>
                        <button type="button" class="btn btn-outline-primary" data-toggle="modal" data-target="#editSubCategoryModal" title="Alt Kategori Düzenle">
                            <i class="fas fa-edit"></i>
                        </button>
                        <button type="button" class="btn btn-outline-danger" data-toggle="modal" data-target="#deleteSubCategoryModal" title="Alt Kategori Sil">
                            <i class="fas fa-trash-alt"></i>
                        </button>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <label for="RiskLevel">Risk Seviyesi</label>
                <select class="form-control" id="RiskLevel" name="RiskLevel" disabled>
                    <option value="0">Düşük</option>
                    <option value="1">Orta</option>
                    <option value="2">Yüksek</option>
                </select>
            </div>
            <div class="form-group">
                <label for="Images">Resimler</label>
                <input type="file" class="form-control" id="Images" name="Images" multiple accept="image/*">
                <div id="imagePreview" style="margin-top: 10px; display: flex; flex-wrap: wrap;"></div>
            </div>
            <br />
            <button type="submit" class="btn btn-primary">Hata Ekle</button>
        </form>
    </div>
</div>

<!-- Kategori Ekleme Modalı -->
<div class="modal fade" id="addCategoryModal" tabindex="-1" role="dialog" aria-labelledby="addCategoryModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addCategoryModalLabel">Kategori Ekle</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="addCategoryForm">
                    <div class="form-group">
                        <label for="newCategoryName">Kategori Adı</label>
                        <input type="text" class="form-control" id="newCategoryName" name="newCategoryName" required>
                    </div>
                    <br />
                    <button type="submit" class="btn btn-primary">Ekle</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Kategori Düzenleme Modalı -->
<div class="modal fade" id="editCategoryModal" tabindex="-1" role="dialog" aria-labelledby="editCategoryModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editCategoryModalLabel">Kategori Düzenle</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="editCategoryForm">
                    <div class="form-group">
                        <label for="editCategoryId">Kategori Seç</label>
                        <select class="form-control" id="editCategoryId" name="editCategoryId" required>
                            @foreach (var category in ViewBag.Categories)
                            {
                                <option value="@category.Id">@category.Name</option>
                            }
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="editCategoryName">Yeni Kategori Adı</label>
                        <input type="text" class="form-control" id="editCategoryName" name="editCategoryName" required>
                    </div>
                    <button type="submit" class="btn btn-primary">Güncelle</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Kategori Silme Modalı -->
<div class="modal fade" id="deleteCategoryModal" tabindex="-1" role="dialog" aria-labelledby="deleteCategoryModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteCategoryModalLabel">Kategori Sil</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="deleteCategoryForm">
                    <div class="form-group">
                        <label for="deleteCategoryId">Kategori Seç</label>
                        <select class="form-control" id="deleteCategoryId" name="deleteCategoryId">
                            @if (ViewBag.Categories != null)
                            {
                                @foreach (var category in ViewBag.Categories)
                                {
                                    <option value="@category.Id">@category.Name</option>
                                }
                            }
                            else
                            {
                                <option disabled>Kategori Yok</option>
                            }
                        </select>
                    </div>
                    <button type="submit" class="btn btn-danger">Sil</button>
                </form>
            </div>
        </div>
    </div>
</div>
<!-- Alt Kategori Ekleme Modalı -->
<div class="modal fade" id="addSubCategoryModal" tabindex="-1" role="dialog" aria-labelledby="addSubCategoryModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addSubCategoryModalLabel">Alt Kategori Ekle</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="addSubCategoryForm">
                    <div class="form-group">
                        <label for="parentCategory">Kategori</label>
                        <select class="form-control" id="parentCategory" name="CategoryId" required>
                            @foreach (var category in ViewBag.Categories)
                            {
                                <option value="@category.Id">@category.Name</option>
                            }
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="newSubCategoryName">Alt Kategori Adı</label>
                        <input type="text" class="form-control" id="newSubCategoryName" name="Name" required>
                    </div>
                    <div class="form-group">
                        <label for="riskLevel">Risk Seviyesi</label>
                        <select class="form-control" id="riskLevel" name="RiskLevel" required>
                            <option value=""></option>
                            <option value="0">Düşük</option>
                            <option value="1">Orta</option>
                            <option value="2">Yüksek</option>
                        </select>
                    </div>
                    <br />
                    <button type="submit" class="btn btn-primary">Ekle</button>
                </form>
            </div>
        </div>
    </div>
</div>
<!-- Alt Kategori Düzenleme Modalı -->
<div class="modal fade" id="editSubCategoryModal" tabindex="-1" role="dialog" aria-labelledby="editSubCategoryModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editSubCategoryModalLabel">Alt Kategori Düzenle</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="editSubCategoryForm">
                    <div class="form-group">
                        <label for="editParentCategory">Kategori Seç</label>
                        <select class="form-control" id="editParentCategory" name="CategoryId" required>
                            @foreach (var category in ViewBag.Categories)
                            {
                                <option value="@category.Id">@category.Name</option>
                            }
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="editSubCategoryId">Alt Kategori Seç</label>
                        <select class="form-control" id="editSubCategoryId" name="editSubCategoryId" required>
                            <option value="">Önce bir kategori seçin</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="editSubCategoryName">Yeni Alt Kategori Adı</label>
                        <input type="text" class="form-control" id="editSubCategoryName" name="editSubCategoryName" required>
                    </div>
                    <div class="form-group">
                        <label for="editRiskLevel">Risk Seviyesi</label>
                        <select class="form-control" id="editRiskLevel" name="editRiskLevel" required>
                            <option value="0">Düşük</option>
                            <option value="1">Orta</option>
                            <option value="2">Yüksek</option>
                        </select>
                    </div>
                    <button type="submit" class="btn btn-primary">Güncelle</button>
                </form>
            </div>
        </div>
    </div>
</div>
<!-- Alt Kategori Silme Modalı -->
<div class="modal fade" id="deleteSubCategoryModal" tabindex="-1" role="dialog" aria-labelledby="deleteSubCategoryModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteSubCategoryModalLabel">Alt Kategori Sil</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="deleteSubCategoryForm">
                    <div class="form-group">
                        <label for="deleteCategorySelect">Kategori Seç</label>
                        <select class="form-control" id="deleteCategorySelect" name="CategoryId" required>
                            @foreach (var category in ViewBag.Categories)
                            {
                                <option value="@category.Id">@category.Name</option>
                            }
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="deleteSubCategoryId">Alt Kategori Seç</label>
                        <select class="form-control" id="deleteSubCategoryId" name="SubCategoryId" required>
                            <option value="">Lütfen önce bir kategori seçin</option>
                        </select>
                    </div>
                    <button type="submit" class="btn btn-danger">Sil</button>
                </form>
            </div>
        </div>
    </div>
</div>
<!-- SweetAlert2 ve jQuery ile Ajax İşlemleri -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>document.getElementById('Images').addEventListener('change', function () {
        var imagePreview = document.getElementById('imagePreview');

        // Clear the existing images before adding new ones
        imagePreview.innerHTML = '';

        Array.from(this.files).forEach(file => {
            var reader = new FileReader();
            reader.onload = function (e) {
                var img = document.createElement('img');
                img.src = e.target.result;
                img.style.maxWidth = '200px';  // Genişlik artırıldı
                img.style.maxHeight = '200px'; // Yükseklik artırıldı
                img.style.marginRight = '10px';
                img.style.marginBottom = '10px';
                imagePreview.appendChild(img);
            }
            reader.readAsDataURL(file);
        });
    });</script>
<script>
    $(document).ready(function () {
     // Kategori değiştiğinde alt kategorileri filtrele
    $('#deleteCategorySelect').on('change', function() {
        var selectedCategoryId = $(this).val();
        var subCategorySelect = $('#deleteSubCategoryId');
        subCategorySelect.empty();

        if (selectedCategoryId) {
            var subCategories = @Html.Raw(ViewBag.SubCategoriesJson);
            var filteredSubCategories = subCategories.filter(function (subCategory) {
                return subCategory.CategoryId == selectedCategoryId;
            });

            if (filteredSubCategories.length > 0) {
                filteredSubCategories.forEach(function (subCategory) {
                    subCategorySelect.append(new Option(subCategory.Name, subCategory.Id));
                });
            } else {
                subCategorySelect.append(new Option("Alt kategori bulunamadı", ""));
            }
        } else {
            subCategorySelect.append(new Option("Lütfen önce bir kategori seçin", ""));
        }
    });

    // Alt Kategori Silme
    $('#deleteSubCategoryForm').on('submit', function(e) {
        e.preventDefault();
        var subCategoryId = $('#deleteSubCategoryId').val();
        Swal.fire({
            title: 'Emin misiniz?',
            text: "Bu alt kategoriyi silmek istediğinizden emin misiniz?",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Evet, sil!',
            cancelButtonText: 'İptal'
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("DeleteSubCategory", "ISGSafetyIssue")',
                    data: { subCategoryId: subCategoryId },
                    success: function(response) {
                        if (response.success) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Başarılı!',
                                text: 'Alt kategori başarıyla silindi.',
                                confirmButtonText: 'Tamam'
                            }).then(() => {
                                location.reload(); // Sayfayı yeniden yükle
                            });
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Hata!',
                                text: response.message || 'Alt kategoriye ait bir ISG hatası oldugu icin silinemedi. Önce bu hataları silin.',
                                confirmButtonText: 'Tamam'
                            });
                        }
                    },
                    error: function() {
                        Swal.fire({
                            icon: 'error',
                            title: 'Hata!',
                            text: 'Alt kategori silinirken bir hata oluştu.',
                            confirmButtonText: 'Tamam'
                        });
                    }
                });
            }
        });
    });
    function updateEditSubCategories() {
    var selectedCategoryId = $('#editParentCategory').val();
    var subCategorySelect = $('#editSubCategoryId');
    subCategorySelect.empty(); // Mevcut alt kategorileri temizle
    if (selectedCategoryId) {
        var subCategories = @Html.Raw(ViewBag.SubCategoriesJson);
        var filteredSubCategories = subCategories.filter(function (subCategory) {
            return subCategory.CategoryId == selectedCategoryId;
        });

        if (filteredSubCategories.length > 0) {
            filteredSubCategories.forEach(function (subCategory) {
                subCategorySelect.append(new Option(subCategory.Name, subCategory.Id));
            });
        } else {
            subCategorySelect.append(new Option("Alt kategori bulunamadı", ""));
        }
    } else {
        subCategorySelect.append(new Option("Lütfen önce bir kategori seçin", ""));
    }
}

    // Alt kategori seçildiğinde ilgili bilgileri doldur
    function populateEditSubCategoryDetails() {
        var selectedSubCategoryId = $('#editSubCategoryId').val();
        if (selectedSubCategoryId) {
            var subCategories = @Html.Raw(ViewBag.SubCategoriesJson);
            var selectedSubCategory = subCategories.find(function (subCategory) {
                return subCategory.Id == selectedSubCategoryId;
            });

            if (selectedSubCategory) {
                $('#editSubCategoryName').val(selectedSubCategory.Name);
                $('#editRiskLevel').val(selectedSubCategory.RiskLevel);
            } else {
                $('#editSubCategoryName').val('');
                $('#editRiskLevel').val('');
            }
        } else {
            $('#editSubCategoryName').val('');
            $('#editRiskLevel').val('');
        }
    }

        // Kategori değiştiğinde alt kategorileri güncelle
        $('#editParentCategory').on('change', function () {
            updateEditSubCategories();
            populateEditSubCategoryDetails(); // Risk seviyesini de güncelle
        });

        // Modal açıldığında, mevcut kategori ve alt kategori bilgilerini yükle
        $('#editSubCategoryModal').on('show.bs.modal', function () {
            updateEditSubCategories();  // Modal açıldığında alt kategorileri güncelle
        });


    // Alt kategori güncelleme formunu işle
    $('#editSubCategoryForm').on('submit', function(e) {
        e.preventDefault();
        var model = {
            Id: $('#editSubCategoryId').val(),
            Name: $('#editSubCategoryName').val(),
            RiskLevel: $('#editRiskLevel').val(),
            CategoryId: $('#editParentCategory').val()
        };

        $.ajax({
            type: "POST",
            url: '@Url.Action("EditSubCategory", "ISGSafetyIssue")',
            data: model,
            success: function(response) {
                if (response.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Başarılı!',
                        text: 'Alt kategori başarıyla güncellendi.',
                        confirmButtonText: 'Tamam'
                    }).then(() => {
                        location.reload(); // Sayfayı yeniden yükle
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Hata!',
                        text: 'Alt kategori güncellenirken bir hata oluştu.',
                        confirmButtonText: 'Tamam'
                    });
                }
            },
            error: function() {
                Swal.fire({
                    icon: 'error',
                    title: 'Hata!',
                    text: 'Alt kategori güncellenirken bir hata oluştu.',
                    confirmButtonText: 'Tamam'
                });
            }
        });
    });

    // Modal açıldığında, mevcut kategori ve alt kategori bilgilerini yükle
    $('#editSubCategoryModal').on('show.bs.modal', function () {
        updateEditSubCategories();
    });

    // Function to filter subcategories based on selected category
    function updateSubCategories() {
        var selectedCategoryId = $('#CategoryId').val();
        var subCategorySelect = $('#SubCategoryId');
        subCategorySelect.empty();
        $('#RiskLevel').val(""); // Clear the risk level initially

        if (selectedCategoryId) {
            var subCategories = @Html.Raw(ViewBag.SubCategoriesJson);
            var filteredSubCategories = subCategories.filter(function (subCategory) {
                return subCategory.CategoryId == selectedCategoryId;
            });

            if (filteredSubCategories.length > 0) {
                filteredSubCategories.forEach(function (subCategory) {
                    subCategorySelect.append(new Option(subCategory.Name, subCategory.Id));
                });
            } else {
                subCategorySelect.append(new Option("Alt kategori bulunamadı", ""));
            }
        } else {
            subCategorySelect.append(new Option("Lütfen önce bir kategori seçin", ""));
        }
    }

    // Function to update risk level based on selected subcategory
    function updateRiskLevel() {
        var selectedSubCategoryId = $('#SubCategoryId').val();

        if (selectedSubCategoryId) {
            var subCategories = @Html.Raw(ViewBag.SubCategoriesJson);
            var selectedSubCategory = subCategories.find(function (subCategory) {
                return subCategory.Id == selectedSubCategoryId;
            });

            if (selectedSubCategory) {
                $('#RiskLevel').val(selectedSubCategory.RiskLevel);
            } else {
                $('#RiskLevel').val(""); // Clear the risk level if no subcategory is found
            }
        } else {
            $('#RiskLevel').val(""); // Clear the risk level if no subcategory is selected
        }
    }

    // Event handler for category change
    $('#CategoryId').on('change', function() {
        updateSubCategories();
        updateRiskLevel(); // Also update the risk level when category changes
    });

    // Event handler for subcategory change
    $('#SubCategoryId').on('change', function() {
        updateRiskLevel();
    });

    // Trigger change event to load subcategories and risk level for the default selected category
    $('#CategoryId').trigger('change');

    // Alt Kategori Ekleme
    $('#addSubCategoryForm').on('submit', function(e) {
        e.preventDefault();

        var model = {
            CategoryId: $('#parentCategory').val(),
            Name: $('#newSubCategoryName').val(),
            RiskLevel: $('#riskLevel').val()
        };

        $.ajax({
            type: "POST",
            url: '@Url.Action("CreateSubCategory", "ISGSafetyIssue")',
            data: model,
            success: function(response) {
                Swal.fire({
                    icon: 'success',
                    title: 'Başarılı!',
                    text: 'Alt kategori başarıyla eklendi.',
                    confirmButtonText: 'Tamam'
                }).then(() => {
                    location.reload(); // Sayfayı yeniden yükle
                });
            },
            error: function() {
                Swal.fire({
                    icon: 'error',
                    title: 'Hata!',
                    text: 'Alt kategori eklenirken bir hata oluştu.',
                    confirmButtonText: 'Tamam'
                });
            }
        });
    });

    // Kategori Silme
    $('#deleteCategoryForm').on('submit', function(e) {
        e.preventDefault();
        var categoryId = $('#deleteCategoryId').val();

        Swal.fire({
            title: 'Emin misiniz?',
            text: "Bu kategoriyi silmek istediğinizden emin misiniz?",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Evet, sil!',
            cancelButtonText: 'İptal'
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("DeleteCategory", "ISGSafetyIssue")',
                    data: { deleteCategoryId: categoryId },
                    success: function(response) {
                        if (response.success) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Başarılı!',
                                text: 'Kategori başarıyla silindi.',
                                confirmButtonText: 'Tamam'
                            }).then(() => {
                                location.reload(); // Sayfayı yeniden yükle
                            });
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Hata!',
                                text: response.message || 'Kategoriye ait bir ISG hatası oldugu icin silinemedi. Önce bu hataları silin.',
                                confirmButtonText: 'Tamam'
                            });
                        }
                    },
                    error: function() {
                        Swal.fire({
                            icon: 'error',
                            title: 'Hata!',
                            text: 'Kategori silinirken bir hata oluştu.',
                            confirmButtonText: 'Tamam'
                        });
                    }
                });
            }
        });
    });
    // Kategori seçildiğinde düzenleme alanını doldur
    $('#editCategoryId').on('change', function() {
        var selectedOption = $(this).find('option:selected');
        var categoryName = selectedOption.text();
        $('#editCategoryName').val(categoryName);
    });

    // Kategori güncelleme formu
    $('#editCategoryForm').on('submit', function(e) {
        e.preventDefault();
        var categoryId = $('#editCategoryId').val();
        var categoryName = $('#editCategoryName').val();

        var model = {
            Id: categoryId,
            Name: categoryName
        };

        $.ajax({
            type: "POST",
            url: '@Url.Action("EditCategory", "ISGSafetyIssue")',
            data: model,
            success: function(response) {
                if (response.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Başarılı!',
                        text: 'Kategori başarıyla güncellendi.',
                        confirmButtonText: 'Tamam'
                    }).then(() => {
                        location.reload(); // Sayfayı yeniden yükle
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Hata!',
                        text: 'Kategori güncellenirken bir hata oluştu.',
                        confirmButtonText: 'Tamam'
                    });
                }
            },
            error: function() {
                Swal.fire({
                    icon: 'error',
                    title: 'Hata!',
                    text: 'Kategori güncellenirken bir hata oluştu.',
                    confirmButtonText: 'Tamam'
                });
            }
        });
    });

    // Kategori Ekleme
    $('#addCategoryForm').on('submit', function(e) {
        e.preventDefault();
        var categoryName = $('#newCategoryName').val();
        var model = {
            Id: 0,
            Name: categoryName
        };
        $.ajax({
            type: "POST",
            url: '@Url.Action("CreateCategory", "ISGSafetyIssue")',
            data: { model: model },
            success: function (response) {
                Swal.fire({
                    icon: 'success',
                    title: 'Başarılı!',
                    text: 'Kategori başarıyla eklendi.',
                    confirmButtonText: 'Tamam'
                }).then(() => {
                    location.reload(); // Sayfayı yeniden yükle
                });
            },
            error: function() {
                Swal.fire({
                    icon: 'error',
                    title: 'Hata!',
                    text: 'Kategori eklenirken bir hata oluştu.',
                    confirmButtonText: 'Tamam'
                });
            }
        });
    });

});
</script>