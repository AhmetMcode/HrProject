// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using HrProject.Presentation.Data;

#nullable disable

namespace HrProject.Presentation.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240201212443_mesaaa")]
    partial class mesaaa
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("HrProject.Domain.Entities.Account2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CurrencyType")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("FinalBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FirstBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("FirstBalanceDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Accounts2");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.ActivePatternPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Left")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PatternId")
                        .HasColumnType("int");

                    b.Property<int>("ProductionPlaceId")
                        .HasColumnType("int");

                    b.Property<decimal>("Top")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PatternId");

                    b.HasIndex("ProductionPlaceId");

                    b.ToTable("ActivePatternPlan");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.AnkrajIron", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Length")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("OfferCalculateId")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<decimal>("Thick")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Width")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("OfferCalculateId");

                    b.ToTable("AnkrajIrons");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("MailAdresi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MailSifresi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonelNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("ProfilPhoto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Salary")
                        .HasColumnType("int");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SurName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("HrProject.Domain.Entities.Bank2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountNo")
                        .HasColumnType("int");

                    b.Property<string>("Branch")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CurrencyType")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("FinalBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FirstBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("FirstBalanceDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IBAN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Banks2");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.Base.OfferMaterials", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CurrentValueId")
                        .HasColumnType("int");

                    b.Property<bool>("Formula")
                        .HasColumnType("bit");

                    b.Property<int?>("Formulas")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("OfferCostCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("OrderNumber")
                        .HasColumnType("int");

                    b.Property<int?>("TypesFormulas")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Wastage")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CurrentValueId");

                    b.HasIndex("OfferCostCategoryId");

                    b.ToTable("OfferMaterials");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.BuyingWithholdingRate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("WithHRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("WithHRateCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BuyingWithholdingRates");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.BuyingWithholdingType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("WithHName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BuyingWithholdingTypes");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.CariBank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CariKartId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CurrencyType")
                        .HasColumnType("int");

                    b.Property<string>("IBAN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SwiftCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CariKartId")
                        .IsUnique();

                    b.ToTable("CariBanks");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.CariKart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CariKartType")
                        .HasColumnType("int");

                    b.Property<int>("CariType")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DefaultAddress")
                        .HasColumnType("bit");

                    b.Property<string>("EMail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Explanation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("TaxNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TaxOfficeId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("TaxOfficeId");

                    b.ToTable("CariKarts");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.CariRisk", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CariKartId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LimitActionAll")
                        .HasColumnType("int");

                    b.Property<int>("LimitActionDelivery")
                        .HasColumnType("int");

                    b.Property<int>("LimitActionOrder")
                        .HasColumnType("int");

                    b.Property<int>("RiskControl")
                        .HasColumnType("int");

                    b.Property<decimal>("RiskLimit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CariKartId")
                        .IsUnique();

                    b.ToTable("CariRisks");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.Checks", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccountNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CariKartId")
                        .HasColumnType("int");

                    b.Property<int>("CheckStatusEnum")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Installment")
                        .HasColumnType("int");

                    b.Property<string>("PrincipalDebtor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ReceivedOrGiven")
                        .HasColumnType("bit");

                    b.Property<string>("Receiver")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartingDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CariKartId");

                    b.ToTable("Checkses");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TcpsCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Citys");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.ConcreteClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ConcreteClass");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.CurrentValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentValueName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("UnitId");

                    b.ToTable("CurrentValues");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.CurrentValueChange", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CurrentValueId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CurrentValueId");

                    b.ToTable("CurrentValueChanges");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.DetailOffer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CariKartId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DeliveryTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DiscountRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("FirstOfferId")
                        .HasColumnType("int");

                    b.Property<int>("GoodsCodeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsVat")
                        .HasColumnType("bit");

                    b.Property<decimal>("NetPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("OfferType")
                        .HasColumnType("int");

                    b.Property<DateTime>("PaymentLastDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PriceValidityDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PurchaseVatId")
                        .HasColumnType("int");

                    b.Property<decimal>("Qantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("StockId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UnitType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CariKartId");

                    b.HasIndex("FirstOfferId");

                    b.HasIndex("GoodsCodeId");

                    b.HasIndex("PurchaseVatId");

                    b.HasIndex("StockId");

                    b.ToTable("DetailOffers");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.District", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TcpsCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Districts");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.EDocumentBaseRate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("EDocumentBaseRates");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.FileUploadLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectModuleSubId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UploadDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UploadFileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UploadFolderName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UploadUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectModuleSubId");

                    b.HasIndex("UploadUserId");

                    b.ToTable("FileUploadLog");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.FirstOffer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GoodsCodeId")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("StockNames")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubFirstOfferId")
                        .HasColumnType("int");

                    b.Property<string>("UnitType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("GoodsCodeId");

                    b.HasIndex("SubFirstOfferId");

                    b.ToTable("FirstOffers");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.FollowCurrencyRate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CurrencyRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CurrencyRateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CurrencyType")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyType2")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("FollowCurrencyRates");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.FoodName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("FoodNames");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.FuelTransfer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("FuelAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("FuelTransferDAte")
                        .HasColumnType("datetime2");

                    b.Property<string>("FuelType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("LastKm")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("MainResponsible")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StockId")
                        .HasColumnType("int");

                    b.Property<string>("StockName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VehicleId");

                    b.ToTable("FuelTransfers");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.GoodsCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("GoodsCodes");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.InWaybill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ActualDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CariKartId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EditDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EntryCityId")
                        .HasColumnType("int");

                    b.Property<int>("EntryDistrictId")
                        .HasColumnType("int");

                    b.Property<string>("EntryInvoiceAdress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntryPostaCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExitCityId")
                        .HasColumnType("int");

                    b.Property<int>("ExitDistrictId")
                        .HasColumnType("int");

                    b.Property<string>("ExitInvoiceAdress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExitPostaCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KargoCompany")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("KargoTaxNumber")
                        .HasColumnType("int");

                    b.Property<string>("PersonelCars")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonelNameDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("ShippingMethod")
                        .HasColumnType("tinyint");

                    b.Property<string>("TasiyiciCars")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TasiyiciDriver")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TasiyiciTC")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("WaybillNo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CariKartId");

                    b.HasIndex("EntryCityId");

                    b.HasIndex("EntryDistrictId");

                    b.HasIndex("ExitCityId");

                    b.HasIndex("ExitDistrictId");

                    b.ToTable("InWaybills");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.InWaybillChange", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InWaybillId")
                        .HasColumnType("int");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<int>("StockId")
                        .HasColumnType("int");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("WareHouseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InWaybillId");

                    b.HasIndex("StockId");

                    b.HasIndex("UnitId");

                    b.HasIndex("WareHouseId");

                    b.ToTable("InWaybillChanges");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.InfoCompany", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FaturaHarf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resim")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("InfoCompany");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.InvoiceAdress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CariKartId")
                        .HasColumnType("int");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Contry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DistrictId")
                        .HasColumnType("int");

                    b.Property<string>("FaxNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GSM1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostaCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CariKartId")
                        .IsUnique();

                    b.HasIndex("CityId");

                    b.HasIndex("DistrictId");

                    b.ToTable("InvoiceAdress");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.IronDiameterWeight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DiameterMM")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("WeightKg")
                        .HasColumnType("decimal(10,3)");

                    b.HasKey("Id");

                    b.ToTable("IronDiameterWeights");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.LogoMobil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Barcode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Base64ImageData")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fiyat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("LogoMobil");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.ManifactStepType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ManifactStepTypes");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.Meal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MealCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MealCategoryId");

                    b.ToTable("Meals");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.MealCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("MealCategories");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("FoodNameId")
                        .HasColumnType("int");

                    b.Property<int?>("MealId")
                        .HasColumnType("int");

                    b.Property<int>("PersonQuant")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FoodNameId");

                    b.HasIndex("MealId");

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.MenuDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MealId")
                        .HasColumnType("int");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MealId");

                    b.HasIndex("MenuId");

                    b.ToTable("MenuDetailses");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.MobileToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MobileToken");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.MoneyTransfer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Accounts2Id")
                        .HasColumnType("int");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int?>("Banks2Id")
                        .HasColumnType("int");

                    b.Property<int?>("ChecksId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("MoneyInOut")
                        .HasColumnType("bit");

                    b.Property<int>("MoneyTransferEnum")
                        .HasColumnType("int");

                    b.Property<string>("RelevantAccount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TotalAmount")
                        .HasColumnType("float");

                    b.Property<DateTime>("TransferDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("MoneyTransfers");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.Neighbourhood", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DistrictId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TcpsCode")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DistrictId");

                    b.ToTable("Neighbourhoods");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.NewFood", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("Calorie")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MealId")
                        .HasColumnType("int");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<int>("StockId")
                        .HasColumnType("int");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MealId");

                    b.HasIndex("StockId");

                    b.HasIndex("UnitId");

                    b.ToTable("NewFoods");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ColorNotification")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NotificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SenderId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("SenderId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.NotificationDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<int>("NotificationId")
                        .HasColumnType("int");

                    b.Property<string>("RecipientId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("NotificationId");

                    b.HasIndex("RecipientId");

                    b.ToTable("NotificationDetails");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.Offer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("CariKartId")
                        .HasColumnType("int");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ContractConfirm")
                        .HasColumnType("bit");

                    b.Property<string>("ContractConfirmDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContractConfirmFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ContractConfirmPrice")
                        .HasColumnType("int");

                    b.Property<string>("ContractConfirmRedDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescResponseCalculate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescResponseProject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DistrictId")
                        .HasColumnType("int");

                    b.Property<decimal>("ExchangeRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Explanation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstDraw")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Inflation")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Kilit")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LengthOfTerm")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LengthOfTermCalculate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LengthOfTermProject")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NeighbourhoodId")
                        .HasColumnType("int");

                    b.Property<bool>("OfferCalculateConfirm")
                        .HasColumnType("bit");

                    b.Property<string>("OfferCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Overheads")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ParcelNumber")
                        .HasColumnType("int");

                    b.Property<int>("PlotNumber")
                        .HasColumnType("int");

                    b.Property<decimal?>("ProjectPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProjectResponsibleUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ResponsibleUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("SendProject")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("CariKartId");

                    b.HasIndex("CityId");

                    b.HasIndex("DistrictId");

                    b.HasIndex("NeighbourhoodId");

                    b.HasIndex("ProjectResponsibleUserId");

                    b.HasIndex("ResponsibleUserId");

                    b.ToTable("Offers");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.OfferCalculate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("ANKRAJ")
                        .HasColumnType("decimal(10,3)");

                    b.Property<decimal?>("ANKRAJTotal")
                        .HasColumnType("decimal(10,3)");

                    b.Property<int>("ConcreteClassId")
                        .HasColumnType("int");

                    b.Property<bool>("ConfirmBy")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ElementCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ElementName")
                        .HasColumnType("int");

                    b.Property<decimal?>("GrossConcrete")
                        .HasColumnType("decimal(10,3)");

                    b.Property<decimal?>("GrossConcreteTotal")
                        .HasColumnType("decimal(10,3)");

                    b.Property<decimal?>("IronKg")
                        .HasColumnType("decimal(10,3)");

                    b.Property<decimal?>("IronKgTotal")
                        .HasColumnType("decimal(10,3)");

                    b.Property<decimal?>("IronPlusWicker")
                        .HasColumnType("decimal(10,3)");

                    b.Property<int>("Length")
                        .HasColumnType("int");

                    b.Property<decimal?>("NetConcrete")
                        .HasColumnType("decimal(10,3)");

                    b.Property<decimal?>("NetConcreteTotal")
                        .HasColumnType("decimal(10,3)");

                    b.Property<int>("OfferPartId")
                        .HasColumnType("int");

                    b.Property<int>("OrderNumber")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("ProjectElementId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectElementTypeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("RopeIronKg")
                        .HasColumnType("decimal(10,3)");

                    b.Property<decimal?>("RopeIronKgTotal")
                        .HasColumnType("decimal(10,3)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("WickerIronKg")
                        .HasColumnType("decimal(10,3)");

                    b.Property<decimal?>("WickerIronKgTotal")
                        .HasColumnType("decimal(10,3)");

                    b.HasKey("Id");

                    b.HasIndex("ConcreteClassId");

                    b.HasIndex("OfferPartId");

                    b.HasIndex("ProjectElementId");

                    b.HasIndex("ProjectElementTypeId");

                    b.ToTable("OfferCalculates");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.OfferCostCalculateDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CurrentValueC")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("OfferMaterialsId")
                        .HasColumnType("int");

                    b.Property<int>("OfferPartId")
                        .HasColumnType("int");

                    b.Property<decimal>("Percent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Wastage")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OfferMaterialsId");

                    b.HasIndex("OfferPartId");

                    b.ToTable("OfferCostCalculateDetails");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.OfferCostCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("OfferCostCategorys");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.OfferMessages", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OfferId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OfferId");

                    b.ToTable("OfferMessages");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.OfferMessagesDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("MessageDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OfferMessagesId")
                        .HasColumnType("int");

                    b.Property<string>("SenderUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OfferMessagesId");

                    b.HasIndex("SenderUserId");

                    b.ToTable("OfferMessagesDetails");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.OfferPart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescByPrint")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OfferId")
                        .HasColumnType("int");

                    b.Property<string>("PartName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ProfitRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ProfitTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OfferId");

                    b.ToTable("OfferParts");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.OfferProcess", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("OfferId")
                        .HasColumnType("int");

                    b.Property<int>("OfferProcessStage")
                        .HasColumnType("int");

                    b.Property<string>("ResponsibleUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("StarterUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OfferId");

                    b.HasIndex("ResponsibleUserId");

                    b.HasIndex("StarterUserId");

                    b.ToTable("OfferProcess");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.OfferProjectDocuments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Document1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Document2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Document3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Document4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Document5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Document6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OfferId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OfferId");

                    b.ToTable("OfferProjectDocuments");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.OfferTechnical", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("OfferTechnicals");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.OfferTechnicalByOffer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OfferId")
                        .HasColumnType("int");

                    b.Property<int>("OfferTechnicalId")
                        .HasColumnType("int");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OfferId");

                    b.HasIndex("OfferTechnicalId");

                    b.ToTable("OfferTechnicalByOffers");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.OfferTerminDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BetonSinif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CalculatePozNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Length")
                        .HasColumnType("int");

                    b.Property<int>("OfferTerminSubId")
                        .HasColumnType("int");

                    b.Property<int>("ProjectElementTypeId")
                        .HasColumnType("int");

                    b.Property<int>("QuanTity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OfferTerminSubId");

                    b.HasIndex("ProjectElementTypeId");

                    b.ToTable("OfferTerminDetail");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.OfferTerminSub", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AnsWer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OfferId")
                        .HasColumnType("int");

                    b.Property<int>("TerminType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("send")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("OfferId");

                    b.ToTable("OfferTerminSub");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.OtherCariRisk", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CariKartId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerCheckAction")
                        .HasColumnType("int");

                    b.Property<decimal>("CustomerCheckAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("DeliveryNoteAction")
                        .HasColumnType("int");

                    b.Property<decimal>("DeliveryNoteAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("OwnCheckAction")
                        .HasColumnType("int");

                    b.Property<decimal>("OwnCheckAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CariKartId")
                        .IsUnique();

                    b.ToTable("OtherCariRisks");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.OutWaybill2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ActualDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CariKartId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EditDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EntryCityId")
                        .HasColumnType("int");

                    b.Property<int>("EntryDistrictId")
                        .HasColumnType("int");

                    b.Property<string>("EntryInvoiceAdress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntryPostaCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExitCityId")
                        .HasColumnType("int");

                    b.Property<int>("ExitDistrictId")
                        .HasColumnType("int");

                    b.Property<string>("ExitInvoiceAdress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExitPostaCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("InWay")
                        .HasColumnType("bit");

                    b.Property<string>("KargoCompany")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("KargoTaxNumber")
                        .HasColumnType("int");

                    b.Property<string>("PersonelCars")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonelNameDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("ShippingMethod")
                        .HasColumnType("tinyint");

                    b.Property<string>("TasiyiciCars")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TasiyiciDriver")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TasiyiciTC")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("WaybillNo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CariKartId");

                    b.HasIndex("EntryCityId");

                    b.HasIndex("EntryDistrictId");

                    b.HasIndex("ExitCityId");

                    b.HasIndex("ExitDistrictId");

                    b.ToTable("OutWaybills2");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.OutWaybillChange", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OutWaybill2Id")
                        .HasColumnType("int");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<int>("StockId")
                        .HasColumnType("int");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("WareHouseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OutWaybill2Id");

                    b.HasIndex("StockId");

                    b.HasIndex("UnitId");

                    b.HasIndex("WareHouseId");

                    b.ToTable("OutWaybillChanges");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.PMProjectElementDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IronDiameterWeightId")
                        .HasColumnType("int");

                    b.Property<int>("PmCalculateId")
                        .HasColumnType("int");

                    b.Property<string>("PozNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Similar")
                        .HasColumnType("int");

                    b.Property<decimal>("Size")
                        .HasColumnType("decimal(10,3)");

                    b.Property<decimal>("TotalWeight")
                        .HasColumnType("decimal(10,3)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IronDiameterWeightId");

                    b.HasIndex("PmCalculateId");

                    b.ToTable("PMProjectElementDetails");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.PMWickerIronCalculate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Length")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PmCalculateId")
                        .HasColumnType("int");

                    b.Property<int>("Similar")
                        .HasColumnType("int");

                    b.Property<int>("SteelMeshTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Width")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("PmCalculateId");

                    b.HasIndex("SteelMeshTypeId");

                    b.ToTable("PMWickerIronCalculates");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.Pattern", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GapCm")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMulti")
                        .HasColumnType("bit");

                    b.Property<decimal>("Length")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("MaxQun")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PatternType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Patterns");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.PatternProjectElementType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PatternId")
                        .HasColumnType("int");

                    b.Property<int>("ProjectElementTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PatternId");

                    b.HasIndex("ProjectElementTypeId");

                    b.ToTable("PatternProjectElementType");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CriminalRecord")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Diploma")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EntryDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExitDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("HealthReport")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdCard")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MesaiCarpan")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonPositionId")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaceOfResidence")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PopulationRegistration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TcNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("WorkingTime")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("WorkplaceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonPositionId");

                    b.HasIndex("WorkplaceId");

                    b.ToTable("Personals");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.PersonAdvancePayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("BonusAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfIssue")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsOkey")
                        .HasColumnType("bit");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("PersonAdvancePayments");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.PersonAnnualLeave", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FinishDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReturnDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UsedDay")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("PersonAnnualLeaves");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.PersonBonus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("BonusAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfIssue")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsOkey")
                        .HasColumnType("bit");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("PersonBonus");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.PersonPermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("File")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FinishDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<int>("PersonPermissionTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.HasIndex("PersonPermissionTypeId");

                    b.ToTable("PersonPermissions");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.PersonPermissionPayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaymentDay")
                        .HasColumnType("int");

                    b.Property<int>("PaymentYear")
                        .HasColumnType("int");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("PersonPermissionPayments");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.PersonPermissionRule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Day")
                        .HasColumnType("int");

                    b.Property<bool>("IsRetired")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("WorkingYear")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PersonPermissionRules");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.PersonPermissionTransfer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<int>("TransferDay")
                        .HasColumnType("int");

                    b.Property<int>("TransferYear")
                        .HasColumnType("int");

                    b.Property<int>("TransferedYear")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("PersonPermissionTransfer");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.PersonPermissionType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfDays")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PersonPermissionTypes");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.PersonPosition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PersonPosition");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.PersonSalary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FinishDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("PersonSalaries");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.PmAnkrajIron", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Length")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PmCalculateId")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<decimal>("Thick")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Width")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("PmCalculateId");

                    b.ToTable("PmAnkrajIrons");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.PmCalculate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("ANKRAJ")
                        .HasColumnType("decimal(10,3)");

                    b.Property<decimal?>("ANKRAJTotal")
                        .HasColumnType("decimal(10,3)");

                    b.Property<int>("ConcreteClassId")
                        .HasColumnType("int");

                    b.Property<bool>("ConfirmBy")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ElementCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ElementName")
                        .HasColumnType("int");

                    b.Property<decimal?>("GrossConcrete")
                        .HasColumnType("decimal(10,3)");

                    b.Property<decimal?>("GrossConcreteTotal")
                        .HasColumnType("decimal(10,3)");

                    b.Property<decimal?>("IronKg")
                        .HasColumnType("decimal(10,3)");

                    b.Property<decimal?>("IronKgTotal")
                        .HasColumnType("decimal(10,3)");

                    b.Property<decimal?>("IronPlusWicker")
                        .HasColumnType("decimal(10,3)");

                    b.Property<int>("Length")
                        .HasColumnType("int");

                    b.Property<decimal?>("NetConcrete")
                        .HasColumnType("decimal(10,3)");

                    b.Property<decimal?>("NetConcreteTotal")
                        .HasColumnType("decimal(10,3)");

                    b.Property<int>("OrderNumber")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("ProjectElementId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectElementTypeId")
                        .HasColumnType("int");

                    b.Property<int>("ProjectModuleSubId")
                        .HasColumnType("int");

                    b.Property<decimal?>("RopeIronKg")
                        .HasColumnType("decimal(10,3)");

                    b.Property<decimal?>("RopeIronKgTotal")
                        .HasColumnType("decimal(10,3)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("WickerIronKg")
                        .HasColumnType("decimal(10,3)");

                    b.Property<decimal?>("WickerIronKgTotal")
                        .HasColumnType("decimal(10,3)");

                    b.HasKey("Id");

                    b.HasIndex("ConcreteClassId");

                    b.HasIndex("ProjectElementId");

                    b.HasIndex("ProjectElementTypeId");

                    b.HasIndex("ProjectModuleSubId");

                    b.ToTable("PmCalculates");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.PmRopeIron", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Length")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PmCalculateId")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("ToronDiameterId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(10,3)");

                    b.HasKey("Id");

                    b.HasIndex("PmCalculateId");

                    b.HasIndex("ToronDiameterId");

                    b.ToTable("PmRopeIrons");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.ProductManifact2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ConcreteProductionPlaceId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IronProductionPlaceId")
                        .HasColumnType("int");

                    b.Property<string>("ManifactDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderNumber")
                        .HasColumnType("int");

                    b.Property<string>("PlanningDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductPlanProductPlannedId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ConcreteProductionPlaceId");

                    b.HasIndex("IronProductionPlaceId");

                    b.HasIndex("ProductPlanProductPlannedId");

                    b.ToTable("ProductManifacts2");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.ProductManifactDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductManifact2Id")
                        .HasColumnType("int");

                    b.Property<int>("ProductStepEnum")
                        .HasColumnType("int");

                    b.Property<int>("ProjectElementStepId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProductManifact2Id");

                    b.HasIndex("ProjectElementStepId");

                    b.ToTable("ProductManifactDetails");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.ProductManifactDetailImages", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductManifactDetailId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProductManifactDetailId");

                    b.ToTable("ProductManifactDetailImages");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.ProductPlace", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Lengt")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ProductPlaces");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.ProductPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Actual")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OfferId")
                        .HasColumnType("int");

                    b.Property<int>("ProjectModuleSubId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("TerminType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ProductPlan");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.ProductPlanDailyPlanned", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Actual")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductPlanSubPlannedId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProductPlanSubPlannedId");

                    b.ToTable("ProductPlanDailyPlanned");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.ProductPlanProductPlanned", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Actual")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderName")
                        .HasColumnType("int");

                    b.Property<int>("ProductPlanDailyPlannedId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProductPlanDailyPlannedId");

                    b.ToTable("ProductPlanProductPlanned");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.ProductPlanSubPlanned", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Actual")
                        .HasColumnType("bit");

                    b.Property<int>("CanQuant")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OfferCalculateId")
                        .HasColumnType("int");

                    b.Property<int>("PatternId")
                        .HasColumnType("int");

                    b.Property<int?>("PmCalculateId")
                        .HasColumnType("int");

                    b.Property<int>("ProductPlanId")
                        .HasColumnType("int");

                    b.Property<int>("Quant")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("TerminType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OfferCalculateId");

                    b.HasIndex("PatternId");

                    b.HasIndex("PmCalculateId");

                    b.HasIndex("ProductPlanId");

                    b.ToTable("ProductPlanSubPlanned");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.ProductionDrawing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CompleteDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FinishDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProjectModuleSubId")
                        .HasColumnType("int");

                    b.Property<string>("RecipentUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ResponsibleUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("StageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SubStage")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProjectModuleSubId");

                    b.HasIndex("RecipentUserId");

                    b.HasIndex("ResponsibleUserId");

                    b.ToTable("ProductionDrawings");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.ProductionPlace", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Height")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Length")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Width")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("ProductionPlaces");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.ProductionStep", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DurationInMinutes")
                        .HasColumnType("int");

                    b.Property<bool>("IsQuality")
                        .HasColumnType("bit");

                    b.Property<bool>("LastStep")
                        .HasColumnType("bit");

                    b.Property<int>("ManifactStepTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductStepEnum")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ManifactStepTypeId");

                    b.ToTable("ProductionStep");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.ProjectElement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsShowWord")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ProjectElements");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.ProjectElementDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IronDiameterWeightId")
                        .HasColumnType("int");

                    b.Property<int>("OfferCalculateId")
                        .HasColumnType("int");

                    b.Property<string>("PozNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Similar")
                        .HasColumnType("int");

                    b.Property<decimal>("Size")
                        .HasColumnType("decimal(10,3)");

                    b.Property<decimal>("TotalWeight")
                        .HasColumnType("decimal(10,3)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IronDiameterWeightId");

                    b.HasIndex("OfferCalculateId");

                    b.ToTable("ProjectElementDetails");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.ProjectElementStep", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsQuality")
                        .HasColumnType("bit");

                    b.Property<bool>("LastStep")
                        .HasColumnType("bit");

                    b.Property<int>("ProductionStepId")
                        .HasColumnType("int");

                    b.Property<int>("ProjectElementId")
                        .HasColumnType("int");

                    b.Property<int>("Sequence")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProductionStepId");

                    b.HasIndex("ProjectElementId");

                    b.ToTable("ProjectElementStep");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.ProjectElementType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectElementId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProjectElementId");

                    b.ToTable("ProjectElementTypes");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.ProjectModuleStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CompleteDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FinishDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProjectModuleSubId")
                        .HasColumnType("int");

                    b.Property<int>("ProjectProcessStage")
                        .HasColumnType("int");

                    b.Property<string>("RecipentUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ResponsibleUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SubStage")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProjectModuleSubId");

                    b.HasIndex("RecipentUserId");

                    b.HasIndex("ResponsibleUserId");

                    b.ToTable("ProjectModuleStatus");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.ProjectModuleSub", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ArchProject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerRequest")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroundReport")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastMailSendTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("MailSendTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OfferId")
                        .HasColumnType("int");

                    b.Property<string>("PozNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("StartProject")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StartProjectTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("StopProject")
                        .HasColumnType("bit");

                    b.Property<string>("StopProjectDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OfferId");

                    b.ToTable("ProjectModuleSub");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.ProjectType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PartCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ProjectTypes");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.PurchaseVat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("VATRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("VATRateCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PurchaseVats");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.RopeIron", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Length")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("OfferCalculateId")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("ToronDiameterId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(10,3)");

                    b.HasKey("Id");

                    b.HasIndex("OfferCalculateId");

                    b.HasIndex("ToronDiameterId");

                    b.ToTable("RopeIrons");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.SaleVat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("VATRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("VATRateCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SaleVats");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.SalesWithholdingRate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("WithHRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("WithHRateCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SalesWithholdingRates");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.SalesWithholdingType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("WithHType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SalesWithholdingTypes");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.SteelMeshType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Kgm2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("SteelMeshType");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.Stock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Barcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Buyable")
                        .HasColumnType("bit");

                    b.Property<decimal?>("BuyingDiscountRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("BuyingWithholdingRateId")
                        .HasColumnType("int");

                    b.Property<int?>("BuyingWithholdingTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EDocumentBaseRateId")
                        .HasColumnType("int");

                    b.Property<int?>("GoodsCodeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("MaxControl")
                        .HasColumnType("int");

                    b.Property<int?>("MaxStock")
                        .HasColumnType("int");

                    b.Property<int?>("MinControl")
                        .HasColumnType("int");

                    b.Property<int?>("MinStock")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PurchaseVatId")
                        .HasColumnType("int");

                    b.Property<double?>("Quantity")
                        .HasColumnType("float");

                    b.Property<decimal?>("SaleDiscountRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("SaleVatId")
                        .HasColumnType("int");

                    b.Property<bool>("Saleable")
                        .HasColumnType("bit");

                    b.Property<int?>("SalesWithholdingRateId")
                        .HasColumnType("int");

                    b.Property<int?>("SalesWithholdingTypeId")
                        .HasColumnType("int");

                    b.Property<int>("StockCategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Variant")
                        .HasColumnType("bit");

                    b.Property<string>("VariantDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BuyingWithholdingRateId");

                    b.HasIndex("BuyingWithholdingTypeId");

                    b.HasIndex("EDocumentBaseRateId");

                    b.HasIndex("GoodsCodeId");

                    b.HasIndex("PurchaseVatId");

                    b.HasIndex("SaleVatId");

                    b.HasIndex("SalesWithholdingRateId");

                    b.HasIndex("SalesWithholdingTypeId");

                    b.HasIndex("StockCategoryId");

                    b.HasIndex("UnitId");

                    b.ToTable("Stocks");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.StockCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("StockCategories");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.StockChange", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateChange")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EntryWareHouseId")
                        .HasColumnType("int");

                    b.Property<int?>("ExitWareHouseId")
                        .HasColumnType("int");

                    b.Property<int?>("InWaybillId")
                        .HasColumnType("int");

                    b.Property<int?>("OutWaybill2Id")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("StockChangeEnum")
                        .HasColumnType("int");

                    b.Property<int>("StockId")
                        .HasColumnType("int");

                    b.Property<int?>("StockSubId")
                        .HasColumnType("int");

                    b.Property<string>("UnitType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EntryWareHouseId");

                    b.HasIndex("ExitWareHouseId");

                    b.HasIndex("InWaybillId");

                    b.HasIndex("OutWaybill2Id");

                    b.HasIndex("StockId");

                    b.HasIndex("StockSubId");

                    b.ToTable("StockChanges");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.StockMove", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EntryDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExitDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("GoodsCodeId")
                        .HasColumnType("int");

                    b.Property<string>("StockName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("WareHouseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GoodsCodeId");

                    b.HasIndex("WareHouseId");

                    b.ToTable("StockMoves");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.StockPast", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InWaybillId")
                        .HasColumnType("int");

                    b.Property<string>("MoveType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OutWaybill2Id")
                        .HasColumnType("int");

                    b.Property<int>("StockChangeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("InWaybillId");

                    b.HasIndex("OutWaybill2Id");

                    b.HasIndex("StockChangeId");

                    b.ToTable("StockPasts");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.StockSub", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateChange")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EntryWareHouseId")
                        .HasColumnType("int");

                    b.Property<int?>("ExitWareHouseId")
                        .HasColumnType("int");

                    b.Property<int?>("TeslimAlanId")
                        .HasColumnType("int");

                    b.Property<int?>("TeslimEdenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EntryWareHouseId");

                    b.HasIndex("ExitWareHouseId");

                    b.HasIndex("TeslimAlanId");

                    b.HasIndex("TeslimEdenId");

                    b.ToTable("StockSub");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.SubFirstOffer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FirstOfferStatusEnum")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StarterUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("StarterUserId");

                    b.ToTable("SubFirstOffers");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.TallyDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DayOfWork")
                        .HasColumnType("datetime2");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<double>("WorkTime")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("TallyDetails");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.TaxOffice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TaxOffices");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.ToronDiameter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(10,3)");

                    b.HasKey("Id");

                    b.ToTable("ToronDiameters");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.Unit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UnitType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BackupResponsibleId")
                        .HasColumnType("int");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ChassisNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FuelTypeEnum")
                        .HasColumnType("int");

                    b.Property<DateTime>("InspectionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MainResponsibleId")
                        .HasColumnType("int");

                    b.Property<int>("Model")
                        .HasColumnType("int");

                    b.Property<string>("Plate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BackupResponsibleId");

                    b.HasIndex("MainResponsibleId");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.VisitorEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CarInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EntryTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExitTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<string>("PersonPosition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("VisitReason")
                        .HasColumnType("int");

                    b.Property<string>("VisitorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VisitorStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("VisitorEntries");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.WareHouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("WareHouses");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.WickerIronCalculate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Length")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("OfferCalculateId")
                        .HasColumnType("int");

                    b.Property<int>("Similar")
                        .HasColumnType("int");

                    b.Property<int>("SteelMeshTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Width")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("OfferCalculateId");

                    b.HasIndex("SteelMeshTypeId");

                    b.ToTable("WickerIronCalculate");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.Workplace", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Workplaces");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("HrProject.Domain.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("HrProject.Domain.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrProject.Domain.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("HrProject.Domain.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HrProject.Domain.Entities.ActivePatternPlan", b =>
                {
                    b.HasOne("HrProject.Domain.Entities.Pattern", "Pattern")
                        .WithMany()
                        .HasForeignKey("PatternId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrProject.Domain.Entities.ProductionPlace", "ProductionPlace")
                        .WithMany()
                        .HasForeignKey("ProductionPlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pattern");

                    b.Navigation("ProductionPlace");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.AnkrajIron", b =>
                {
                    b.HasOne("HrProject.Domain.Entities.OfferCalculate", "OfferCalculate")
                        .WithMany()
                        .HasForeignKey("OfferCalculateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OfferCalculate");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.Base.OfferMaterials", b =>
                {
                    b.HasOne("HrProject.Domain.Entities.CurrentValue", "CurrentValue")
                        .WithMany()
                        .HasForeignKey("CurrentValueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrProject.Domain.Entities.OfferCostCategory", "OfferCostCategory")
                        .WithMany("OfferMaterials")
                        .HasForeignKey("OfferCostCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CurrentValue");

                    b.Navigation("OfferCostCategory");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.CariBank", b =>
                {
                    b.HasOne("HrProject.Domain.Entities.CariKart", "CariKart")
                        .WithOne("CariBank")
                        .HasForeignKey("HrProject.Domain.Entities.CariBank", "CariKartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CariKart");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.CariKart", b =>
                {
                    b.HasOne("HrProject.Domain.Entities.TaxOffice", "TaxOffice")
                        .WithMany()
                        .HasForeignKey("TaxOfficeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaxOffice");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.CariRisk", b =>
                {
                    b.HasOne("HrProject.Domain.Entities.CariKart", "CariKart")
                        .WithOne("CariRisk")
                        .HasForeignKey("HrProject.Domain.Entities.CariRisk", "CariKartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CariKart");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.Checks", b =>
                {
                    b.HasOne("HrProject.Domain.Entities.CariKart", "CariKart")
                        .WithMany()
                        .HasForeignKey("CariKartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CariKart");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.CurrentValue", b =>
                {
                    b.HasOne("HrProject.Domain.Entities.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.CurrentValueChange", b =>
                {
                    b.HasOne("HrProject.Domain.Entities.CurrentValue", "CurrentValue")
                        .WithMany()
                        .HasForeignKey("CurrentValueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CurrentValue");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.DetailOffer", b =>
                {
                    b.HasOne("HrProject.Domain.Entities.CariKart", "CariKart")
                        .WithMany()
                        .HasForeignKey("CariKartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrProject.Domain.Entities.FirstOffer", "FirstOffer")
                        .WithMany()
                        .HasForeignKey("FirstOfferId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrProject.Domain.Entities.GoodsCode", "GoodsCode")
                        .WithMany()
                        .HasForeignKey("GoodsCodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrProject.Domain.Entities.PurchaseVat", "PurchaseVat")
                        .WithMany()
                        .HasForeignKey("PurchaseVatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrProject.Domain.Entities.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CariKart");

                    b.Navigation("FirstOffer");

                    b.Navigation("GoodsCode");

                    b.Navigation("PurchaseVat");

                    b.Navigation("Stock");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.District", b =>
                {
                    b.HasOne("HrProject.Domain.Entities.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.FileUploadLog", b =>
                {
                    b.HasOne("HrProject.Domain.Entities.ProjectModuleSub", "ProjectModuleSub")
                        .WithMany()
                        .HasForeignKey("ProjectModuleSubId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrProject.Domain.Entities.ApplicationUser", "UploadUser")
                        .WithMany()
                        .HasForeignKey("UploadUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProjectModuleSub");

                    b.Navigation("UploadUser");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.FirstOffer", b =>
                {
                    b.HasOne("HrProject.Domain.Entities.GoodsCode", "GoodsCode")
                        .WithMany()
                        .HasForeignKey("GoodsCodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrProject.Domain.Entities.SubFirstOffer", "SubFirstOffer")
                        .WithMany()
                        .HasForeignKey("SubFirstOfferId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GoodsCode");

                    b.Navigation("SubFirstOffer");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.FuelTransfer", b =>
                {
                    b.HasOne("HrProject.Domain.Entities.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.InWaybill", b =>
                {
                    b.HasOne("HrProject.Domain.Entities.CariKart", "CariKart")
                        .WithMany()
                        .HasForeignKey("CariKartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrProject.Domain.Entities.City", "EntryCity")
                        .WithMany()
                        .HasForeignKey("EntryCityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrProject.Domain.Entities.District", "EntryDistrict")
                        .WithMany()
                        .HasForeignKey("EntryDistrictId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrProject.Domain.Entities.City", "ExitCity")
                        .WithMany()
                        .HasForeignKey("ExitCityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrProject.Domain.Entities.District", "ExitDistrict")
                        .WithMany()
                        .HasForeignKey("ExitDistrictId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CariKart");

                    b.Navigation("EntryCity");

                    b.Navigation("EntryDistrict");

                    b.Navigation("ExitCity");

                    b.Navigation("ExitDistrict");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.InWaybillChange", b =>
                {
                    b.HasOne("HrProject.Domain.Entities.InWaybill", null)
                        .WithMany("InWaybillChanges")
                        .HasForeignKey("InWaybillId");

                    b.HasOne("HrProject.Domain.Entities.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrProject.Domain.Entities.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrProject.Domain.Entities.WareHouse", "WareHouse")
                        .WithMany()
                        .HasForeignKey("WareHouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Stock");

                    b.Navigation("Unit");

                    b.Navigation("WareHouse");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.InvoiceAdress", b =>
                {
                    b.HasOne("HrProject.Domain.Entities.CariKart", "CariKart")
                        .WithOne("InvoiceAdress")
                        .HasForeignKey("HrProject.Domain.Entities.InvoiceAdress", "CariKartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrProject.Domain.Entities.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrProject.Domain.Entities.District", "District")
                        .WithMany()
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CariKart");

                    b.Navigation("City");

                    b.Navigation("District");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.Meal", b =>
                {
                    b.HasOne("HrProject.Domain.Entities.MealCategory", "MealCategory")
                        .WithMany()
                        .HasForeignKey("MealCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MealCategory");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.Menu", b =>
                {
                    b.HasOne("HrProject.Domain.Entities.FoodName", "FoodName")
                        .WithMany()
                        .HasForeignKey("FoodNameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrProject.Domain.Entities.Meal", null)
                        .WithMany("Menus")
                        .HasForeignKey("MealId");

                    b.Navigation("FoodName");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.MenuDetails", b =>
                {
                    b.HasOne("HrProject.Domain.Entities.Meal", "Meal")
                        .WithMany()
                        .HasForeignKey("MealId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrProject.Domain.Entities.Menu", "Menu")
                        .WithMany("MenuDetails")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Meal");

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.Neighbourhood", b =>
                {
                    b.HasOne("HrProject.Domain.Entities.District", "District")
                        .WithMany()
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("District");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.NewFood", b =>
                {
                    b.HasOne("HrProject.Domain.Entities.Meal", "Meal")
                        .WithMany("NewFoods")
                        .HasForeignKey("MealId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrProject.Domain.Entities.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrProject.Domain.Entities.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Meal");

                    b.Navigation("Stock");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.Notification", b =>
                {
                    b.HasOne("HrProject.Domain.Entities.ApplicationUser", "Sender")
                        .WithMany()
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.NotificationDetail", b =>
                {
                    b.HasOne("HrProject.Domain.Entities.Notification", "Notification")
                        .WithMany()
                        .HasForeignKey("NotificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrProject.Domain.Entities.ApplicationUser", "Recipient")
                        .WithMany()
                        .HasForeignKey("RecipientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Notification");

                    b.Navigation("Recipient");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.Offer", b =>
                {
                    b.HasOne("HrProject.Domain.Entities.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId");

                    b.HasOne("HrProject.Domain.Entities.CariKart", "CariKart")
                        .WithMany()
                        .HasForeignKey("CariKartId");

                    b.HasOne("HrProject.Domain.Entities.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId");

                    b.HasOne("HrProject.Domain.Entities.District", "District")
                        .WithMany()
                        .HasForeignKey("DistrictId");

                    b.HasOne("HrProject.Domain.Entities.Neighbourhood", "Neighbourhood")
                        .WithMany()
                        .HasForeignKey("NeighbourhoodId");

                    b.HasOne("HrProject.Domain.Entities.ApplicationUser", "ProjectResponsibleUser")
                        .WithMany()
                        .HasForeignKey("ProjectResponsibleUserId");

                    b.HasOne("HrProject.Domain.Entities.ApplicationUser", "ResponsibleUser")
                        .WithMany()
                        .HasForeignKey("ResponsibleUserId");

                    b.Navigation("ApplicationUser");

                    b.Navigation("CariKart");

                    b.Navigation("City");

                    b.Navigation("District");

                    b.Navigation("Neighbourhood");

                    b.Navigation("ProjectResponsibleUser");

                    b.Navigation("ResponsibleUser");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.OfferCalculate", b =>
                {
                    b.HasOne("HrProject.Domain.Entities.ConcreteClass", "ConcreteClass")
                        .WithMany()
                        .HasForeignKey("ConcreteClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrProject.Domain.Entities.OfferPart", "OfferPart")
                        .WithMany("OfferCalculates")
                        .HasForeignKey("OfferPartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrProject.Domain.Entities.ProjectElement", "ProjectElement")
                        .WithMany()
                        .HasForeignKey("ProjectElementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrProject.Domain.Entities.ProjectElementType", "ProjectElementType")
                        .WithMany()
                        .HasForeignKey("ProjectElementTypeId");

                    b.Navigation("ConcreteClass");

                    b.Navigation("OfferPart");

                    b.Navigation("ProjectElement");

                    b.Navigation("ProjectElementType");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.OfferCostCalculateDetail", b =>
                {
                    b.HasOne("HrProject.Domain.Entities.Base.OfferMaterials", "OfferMaterials")
                        .WithMany()
                        .HasForeignKey("OfferMaterialsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrProject.Domain.Entities.OfferPart", "OfferPart")
                        .WithMany()
                        .HasForeignKey("OfferPartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OfferMaterials");

                    b.Navigation("OfferPart");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.OfferMessages", b =>
                {
                    b.HasOne("HrProject.Domain.Entities.Offer", "Offer")
                        .WithMany()
                        .HasForeignKey("OfferId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Offer");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.OfferMessagesDetail", b =>
                {
                    b.HasOne("HrProject.Domain.Entities.OfferMessages", "OfferMessages")
                        .WithMany("OfferMessagesDetail")
                        .HasForeignKey("OfferMessagesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrProject.Domain.Entities.ApplicationUser", "SenderUser")
                        .WithMany()
                        .HasForeignKey("SenderUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OfferMessages");

                    b.Navigation("SenderUser");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.OfferPart", b =>
                {
                    b.HasOne("HrProject.Domain.Entities.Offer", "Offer")
                        .WithMany("OfferParts")
                        .HasForeignKey("OfferId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Offer");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.OfferProcess", b =>
                {
                    b.HasOne("HrProject.Domain.Entities.Offer", "Offer")
                        .WithMany("OfferProcess")
                        .HasForeignKey("OfferId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrProject.Domain.Entities.ApplicationUser", "ResponsibleUser")
                        .WithMany()
                        .HasForeignKey("ResponsibleUserId");

                    b.HasOne("HrProject.Domain.Entities.ApplicationUser", "StarterUser")
                        .WithMany()
                        .HasForeignKey("StarterUserId");

                    b.Navigation("Offer");

                    b.Navigation("ResponsibleUser");

                    b.Navigation("StarterUser");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.OfferProjectDocuments", b =>
                {
                    b.HasOne("HrProject.Domain.Entities.Offer", "Offer")
                        .WithMany("OfferProjectDocuments")
                        .HasForeignKey("OfferId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Offer");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.OfferTechnicalByOffer", b =>
                {
                    b.HasOne("HrProject.Domain.Entities.Offer", "Offer")
                        .WithMany("OfferTechnicalByOffers")
                        .HasForeignKey("OfferId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrProject.Domain.Entities.OfferTechnical", "OfferTechnical")
                        .WithMany()
                        .HasForeignKey("OfferTechnicalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Offer");

                    b.Navigation("OfferTechnical");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.OfferTerminDetail", b =>
                {
                    b.HasOne("HrProject.Domain.Entities.OfferTerminSub", "OfferTerminSub")
                        .WithMany("OfferTerminDetails")
                        .HasForeignKey("OfferTerminSubId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrProject.Domain.Entities.ProjectElementType", "ProjectElementType")
                        .WithMany()
                        .HasForeignKey("ProjectElementTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OfferTerminSub");

                    b.Navigation("ProjectElementType");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.OfferTerminSub", b =>
                {
                    b.HasOne("HrProject.Domain.Entities.Offer", "Offer")
                        .WithMany()
                        .HasForeignKey("OfferId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Offer");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.OtherCariRisk", b =>
                {
                    b.HasOne("HrProject.Domain.Entities.CariKart", "CariKart")
                        .WithOne("OtherCariRisk")
                        .HasForeignKey("HrProject.Domain.Entities.OtherCariRisk", "CariKartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CariKart");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.OutWaybill2", b =>
                {
                    b.HasOne("HrProject.Domain.Entities.CariKart", "CariKart")
                        .WithMany()
                        .HasForeignKey("CariKartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrProject.Domain.Entities.City", "EntryCity")
                        .WithMany()
                        .HasForeignKey("EntryCityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrProject.Domain.Entities.District", "EntryDistrict")
                        .WithMany()
                        .HasForeignKey("EntryDistrictId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrProject.Domain.Entities.City", "ExitCity")
                        .WithMany()
                        .HasForeignKey("ExitCityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrProject.Domain.Entities.District", "ExitDistrict")
                        .WithMany()
                        .HasForeignKey("ExitDistrictId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CariKart");

                    b.Navigation("EntryCity");

                    b.Navigation("EntryDistrict");

                    b.Navigation("ExitCity");

                    b.Navigation("ExitDistrict");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.OutWaybillChange", b =>
                {
                    b.HasOne("HrProject.Domain.Entities.OutWaybill2", null)
                        .WithMany("OutWaybillChanges")
                        .HasForeignKey("OutWaybill2Id");

                    b.HasOne("HrProject.Domain.Entities.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrProject.Domain.Entities.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrProject.Domain.Entities.WareHouse", "WareHouse")
                        .WithMany()
                        .HasForeignKey("WareHouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Stock");

                    b.Navigation("Unit");

                    b.Navigation("WareHouse");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.PMProjectElementDetails", b =>
                {
                    b.HasOne("HrProject.Domain.Entities.IronDiameterWeight", "IronDiameterWeight")
                        .WithMany()
                        .HasForeignKey("IronDiameterWeightId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrProject.Domain.Entities.PmCalculate", "PmCalculate")
                        .WithMany("PMProjectElementDetails")
                        .HasForeignKey("PmCalculateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IronDiameterWeight");

                    b.Navigation("PmCalculate");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.PMWickerIronCalculate", b =>
                {
                    b.HasOne("HrProject.Domain.Entities.PmCalculate", "PmCalculate")
                        .WithMany()
                        .HasForeignKey("PmCalculateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrProject.Domain.Entities.SteelMeshType", "SteelMeshType")
                        .WithMany()
                        .HasForeignKey("SteelMeshTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PmCalculate");

                    b.Navigation("SteelMeshType");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.PatternProjectElementType", b =>
                {
                    b.HasOne("HrProject.Domain.Entities.Pattern", "Pattern")
                        .WithMany("PatternProjectElementTypes")
                        .HasForeignKey("PatternId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrProject.Domain.Entities.ProjectElementType", "ProjectElementType")
                        .WithMany()
                        .HasForeignKey("ProjectElementTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pattern");

                    b.Navigation("ProjectElementType");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.Person", b =>
                {
                    b.HasOne("HrProject.Domain.Entities.PersonPosition", "PersonPosition")
                        .WithMany()
                        .HasForeignKey("PersonPositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrProject.Domain.Entities.Workplace", "Workplace")
                        .WithMany()
                        .HasForeignKey("WorkplaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PersonPosition");

                    b.Navigation("Workplace");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.PersonAdvancePayment", b =>
                {
                    b.HasOne("HrProject.Domain.Entities.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.PersonAnnualLeave", b =>
                {
                    b.HasOne("HrProject.Domain.Entities.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.PersonBonus", b =>
                {
                    b.HasOne("HrProject.Domain.Entities.Person", "Person")
                        .WithMany("PersonBonuses")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.PersonPermission", b =>
                {
                    b.HasOne("HrProject.Domain.Entities.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrProject.Domain.Entities.PersonPermissionType", "PersonPermissionType")
                        .WithMany("PersonPermissions")
                        .HasForeignKey("PersonPermissionTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");

                    b.Navigation("PersonPermissionType");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.PersonPermissionPayment", b =>
                {
                    b.HasOne("HrProject.Domain.Entities.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.PersonPermissionTransfer", b =>
                {
                    b.HasOne("HrProject.Domain.Entities.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.PersonSalary", b =>
                {
                    b.HasOne("HrProject.Domain.Entities.Person", "Person")
                        .WithMany("PersonSalaries")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.PmAnkrajIron", b =>
                {
                    b.HasOne("HrProject.Domain.Entities.PmCalculate", "PmCalculate")
                        .WithMany()
                        .HasForeignKey("PmCalculateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PmCalculate");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.PmCalculate", b =>
                {
                    b.HasOne("HrProject.Domain.Entities.ConcreteClass", "ConcreteClass")
                        .WithMany()
                        .HasForeignKey("ConcreteClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrProject.Domain.Entities.ProjectElement", "ProjectElement")
                        .WithMany()
                        .HasForeignKey("ProjectElementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrProject.Domain.Entities.ProjectElementType", "ProjectElementType")
                        .WithMany()
                        .HasForeignKey("ProjectElementTypeId");

                    b.HasOne("HrProject.Domain.Entities.ProjectModuleSub", "ProjectModuleSub")
                        .WithMany()
                        .HasForeignKey("ProjectModuleSubId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ConcreteClass");

                    b.Navigation("ProjectElement");

                    b.Navigation("ProjectElementType");

                    b.Navigation("ProjectModuleSub");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.PmRopeIron", b =>
                {
                    b.HasOne("HrProject.Domain.Entities.PmCalculate", "PmCalculate")
                        .WithMany()
                        .HasForeignKey("PmCalculateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrProject.Domain.Entities.ToronDiameter", "ToronDiameter")
                        .WithMany()
                        .HasForeignKey("ToronDiameterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PmCalculate");

                    b.Navigation("ToronDiameter");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.ProductManifact2", b =>
                {
                    b.HasOne("HrProject.Domain.Entities.ProductionPlace", "ConcreteProductionPlace")
                        .WithMany()
                        .HasForeignKey("ConcreteProductionPlaceId");

                    b.HasOne("HrProject.Domain.Entities.ProductionPlace", "IronProductionPlace")
                        .WithMany()
                        .HasForeignKey("IronProductionPlaceId");

                    b.HasOne("HrProject.Domain.Entities.ProductPlanProductPlanned", "ProductPlanProductPlanned")
                        .WithMany()
                        .HasForeignKey("ProductPlanProductPlannedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ConcreteProductionPlace");

                    b.Navigation("IronProductionPlace");

                    b.Navigation("ProductPlanProductPlanned");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.ProductManifactDetail", b =>
                {
                    b.HasOne("HrProject.Domain.Entities.ProductManifact2", "ProductManifact")
                        .WithMany("ProductManifactDetail")
                        .HasForeignKey("ProductManifact2Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrProject.Domain.Entities.ProjectElementStep", "ProjectElementStep")
                        .WithMany()
                        .HasForeignKey("ProjectElementStepId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductManifact");

                    b.Navigation("ProjectElementStep");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.ProductManifactDetailImages", b =>
                {
                    b.HasOne("HrProject.Domain.Entities.ProductManifactDetail", "ProductManifactDetail")
                        .WithMany("ProductManifactDetailImages")
                        .HasForeignKey("ProductManifactDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductManifactDetail");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.ProductPlanDailyPlanned", b =>
                {
                    b.HasOne("HrProject.Domain.Entities.ProductPlanSubPlanned", "ProductPlanSubPlanned")
                        .WithMany("ProductPlanDailyPlanned")
                        .HasForeignKey("ProductPlanSubPlannedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductPlanSubPlanned");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.ProductPlanProductPlanned", b =>
                {
                    b.HasOne("HrProject.Domain.Entities.ProductPlanDailyPlanned", "ProductPlanDailyPlanned")
                        .WithMany("ProductPlanProductPlanned")
                        .HasForeignKey("ProductPlanDailyPlannedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductPlanDailyPlanned");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.ProductPlanSubPlanned", b =>
                {
                    b.HasOne("HrProject.Domain.Entities.OfferCalculate", "OfferCalculate")
                        .WithMany()
                        .HasForeignKey("OfferCalculateId");

                    b.HasOne("HrProject.Domain.Entities.Pattern", "Pattern")
                        .WithMany()
                        .HasForeignKey("PatternId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrProject.Domain.Entities.PmCalculate", "PmCalculate")
                        .WithMany()
                        .HasForeignKey("PmCalculateId");

                    b.HasOne("HrProject.Domain.Entities.ProductPlan", "ProductPlan")
                        .WithMany("ProductPlanSubPlanned")
                        .HasForeignKey("ProductPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OfferCalculate");

                    b.Navigation("Pattern");

                    b.Navigation("PmCalculate");

                    b.Navigation("ProductPlan");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.ProductionDrawing", b =>
                {
                    b.HasOne("HrProject.Domain.Entities.ProjectModuleSub", "ProjectModuleSub")
                        .WithMany("ProductionDrawings")
                        .HasForeignKey("ProjectModuleSubId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrProject.Domain.Entities.ApplicationUser", "RecipentUser")
                        .WithMany()
                        .HasForeignKey("RecipentUserId");

                    b.HasOne("HrProject.Domain.Entities.ApplicationUser", "ResponsibleUser")
                        .WithMany()
                        .HasForeignKey("ResponsibleUserId");

                    b.Navigation("ProjectModuleSub");

                    b.Navigation("RecipentUser");

                    b.Navigation("ResponsibleUser");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.ProductionStep", b =>
                {
                    b.HasOne("HrProject.Domain.Entities.ManifactStepType", "ManifactStepType")
                        .WithMany()
                        .HasForeignKey("ManifactStepTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ManifactStepType");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.ProjectElementDetails", b =>
                {
                    b.HasOne("HrProject.Domain.Entities.IronDiameterWeight", "IronDiameterWeight")
                        .WithMany()
                        .HasForeignKey("IronDiameterWeightId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrProject.Domain.Entities.OfferCalculate", "OfferCalculate")
                        .WithMany()
                        .HasForeignKey("OfferCalculateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IronDiameterWeight");

                    b.Navigation("OfferCalculate");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.ProjectElementStep", b =>
                {
                    b.HasOne("HrProject.Domain.Entities.ProductionStep", "ProductionStep")
                        .WithMany()
                        .HasForeignKey("ProductionStepId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrProject.Domain.Entities.ProjectElement", "ProjectElement")
                        .WithMany()
                        .HasForeignKey("ProjectElementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductionStep");

                    b.Navigation("ProjectElement");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.ProjectElementType", b =>
                {
                    b.HasOne("HrProject.Domain.Entities.ProjectElement", "ProjectElement")
                        .WithMany()
                        .HasForeignKey("ProjectElementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProjectElement");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.ProjectModuleStatus", b =>
                {
                    b.HasOne("HrProject.Domain.Entities.ProjectModuleSub", "ProjectModuleSub")
                        .WithMany("ProjectModuleStatus")
                        .HasForeignKey("ProjectModuleSubId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrProject.Domain.Entities.ApplicationUser", "RecipentUser")
                        .WithMany()
                        .HasForeignKey("RecipentUserId");

                    b.HasOne("HrProject.Domain.Entities.ApplicationUser", "ResponsibleUser")
                        .WithMany()
                        .HasForeignKey("ResponsibleUserId");

                    b.Navigation("ProjectModuleSub");

                    b.Navigation("RecipentUser");

                    b.Navigation("ResponsibleUser");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.ProjectModuleSub", b =>
                {
                    b.HasOne("HrProject.Domain.Entities.Offer", "Offer")
                        .WithMany()
                        .HasForeignKey("OfferId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Offer");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.RopeIron", b =>
                {
                    b.HasOne("HrProject.Domain.Entities.OfferCalculate", "OfferCalculate")
                        .WithMany()
                        .HasForeignKey("OfferCalculateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrProject.Domain.Entities.ToronDiameter", "ToronDiameter")
                        .WithMany()
                        .HasForeignKey("ToronDiameterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OfferCalculate");

                    b.Navigation("ToronDiameter");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.Stock", b =>
                {
                    b.HasOne("HrProject.Domain.Entities.BuyingWithholdingRate", "BuyingWithholdingRate")
                        .WithMany()
                        .HasForeignKey("BuyingWithholdingRateId");

                    b.HasOne("HrProject.Domain.Entities.BuyingWithholdingType", "BuyingWithholdingType")
                        .WithMany()
                        .HasForeignKey("BuyingWithholdingTypeId");

                    b.HasOne("HrProject.Domain.Entities.EDocumentBaseRate", "EDocumentBaseRate")
                        .WithMany()
                        .HasForeignKey("EDocumentBaseRateId");

                    b.HasOne("HrProject.Domain.Entities.GoodsCode", "GoodsCode")
                        .WithMany()
                        .HasForeignKey("GoodsCodeId");

                    b.HasOne("HrProject.Domain.Entities.PurchaseVat", "PurchaseVat")
                        .WithMany()
                        .HasForeignKey("PurchaseVatId");

                    b.HasOne("HrProject.Domain.Entities.SaleVat", "SaleVat")
                        .WithMany()
                        .HasForeignKey("SaleVatId");

                    b.HasOne("HrProject.Domain.Entities.SalesWithholdingRate", "SalesWithholdingRate")
                        .WithMany()
                        .HasForeignKey("SalesWithholdingRateId");

                    b.HasOne("HrProject.Domain.Entities.SalesWithholdingType", "SalesWithholdingType")
                        .WithMany()
                        .HasForeignKey("SalesWithholdingTypeId");

                    b.HasOne("HrProject.Domain.Entities.StockCategory", "StockCategory")
                        .WithMany()
                        .HasForeignKey("StockCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrProject.Domain.Entities.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId");

                    b.Navigation("BuyingWithholdingRate");

                    b.Navigation("BuyingWithholdingType");

                    b.Navigation("EDocumentBaseRate");

                    b.Navigation("GoodsCode");

                    b.Navigation("PurchaseVat");

                    b.Navigation("SaleVat");

                    b.Navigation("SalesWithholdingRate");

                    b.Navigation("SalesWithholdingType");

                    b.Navigation("StockCategory");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.StockChange", b =>
                {
                    b.HasOne("HrProject.Domain.Entities.WareHouse", "EntryWareHouse")
                        .WithMany()
                        .HasForeignKey("EntryWareHouseId");

                    b.HasOne("HrProject.Domain.Entities.WareHouse", "ExitWareHouse")
                        .WithMany()
                        .HasForeignKey("ExitWareHouseId");

                    b.HasOne("HrProject.Domain.Entities.InWaybill", "InWaybill")
                        .WithMany()
                        .HasForeignKey("InWaybillId");

                    b.HasOne("HrProject.Domain.Entities.OutWaybill2", "OutWaybill2")
                        .WithMany()
                        .HasForeignKey("OutWaybill2Id");

                    b.HasOne("HrProject.Domain.Entities.Stock", "Stock")
                        .WithMany("StockChanges")
                        .HasForeignKey("StockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrProject.Domain.Entities.StockSub", "StockSub")
                        .WithMany("StockChanges")
                        .HasForeignKey("StockSubId");

                    b.Navigation("EntryWareHouse");

                    b.Navigation("ExitWareHouse");

                    b.Navigation("InWaybill");

                    b.Navigation("OutWaybill2");

                    b.Navigation("Stock");

                    b.Navigation("StockSub");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.StockMove", b =>
                {
                    b.HasOne("HrProject.Domain.Entities.GoodsCode", "GoodsCode")
                        .WithMany()
                        .HasForeignKey("GoodsCodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrProject.Domain.Entities.WareHouse", "WareHouse")
                        .WithMany()
                        .HasForeignKey("WareHouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GoodsCode");

                    b.Navigation("WareHouse");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.StockPast", b =>
                {
                    b.HasOne("HrProject.Domain.Entities.InWaybill", "InWaybill")
                        .WithMany()
                        .HasForeignKey("InWaybillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrProject.Domain.Entities.OutWaybill2", "OutWaybill2")
                        .WithMany()
                        .HasForeignKey("OutWaybill2Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrProject.Domain.Entities.StockChange", "StockChange")
                        .WithMany()
                        .HasForeignKey("StockChangeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InWaybill");

                    b.Navigation("OutWaybill2");

                    b.Navigation("StockChange");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.StockSub", b =>
                {
                    b.HasOne("HrProject.Domain.Entities.WareHouse", "EntryWareHouse")
                        .WithMany()
                        .HasForeignKey("EntryWareHouseId");

                    b.HasOne("HrProject.Domain.Entities.WareHouse", "ExitWareHouse")
                        .WithMany()
                        .HasForeignKey("ExitWareHouseId");

                    b.HasOne("HrProject.Domain.Entities.Person", "TeslimAlan")
                        .WithMany()
                        .HasForeignKey("TeslimAlanId");

                    b.HasOne("HrProject.Domain.Entities.Person", "TeslimEden")
                        .WithMany()
                        .HasForeignKey("TeslimEdenId");

                    b.Navigation("EntryWareHouse");

                    b.Navigation("ExitWareHouse");

                    b.Navigation("TeslimAlan");

                    b.Navigation("TeslimEden");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.SubFirstOffer", b =>
                {
                    b.HasOne("HrProject.Domain.Entities.ApplicationUser", "StarterUser")
                        .WithMany()
                        .HasForeignKey("StarterUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StarterUser");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.TallyDetail", b =>
                {
                    b.HasOne("HrProject.Domain.Entities.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.Vehicle", b =>
                {
                    b.HasOne("HrProject.Domain.Entities.Person", "BackupResponsible")
                        .WithMany()
                        .HasForeignKey("BackupResponsibleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrProject.Domain.Entities.Person", "MainResponsible")
                        .WithMany()
                        .HasForeignKey("MainResponsibleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BackupResponsible");

                    b.Navigation("MainResponsible");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.VisitorEntry", b =>
                {
                    b.HasOne("HrProject.Domain.Entities.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.WickerIronCalculate", b =>
                {
                    b.HasOne("HrProject.Domain.Entities.OfferCalculate", "OfferCalculate")
                        .WithMany()
                        .HasForeignKey("OfferCalculateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrProject.Domain.Entities.SteelMeshType", "SteelMeshType")
                        .WithMany()
                        .HasForeignKey("SteelMeshTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OfferCalculate");

                    b.Navigation("SteelMeshType");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.CariKart", b =>
                {
                    b.Navigation("CariBank")
                        .IsRequired();

                    b.Navigation("CariRisk")
                        .IsRequired();

                    b.Navigation("InvoiceAdress")
                        .IsRequired();

                    b.Navigation("OtherCariRisk")
                        .IsRequired();
                });

            modelBuilder.Entity("HrProject.Domain.Entities.InWaybill", b =>
                {
                    b.Navigation("InWaybillChanges");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.Meal", b =>
                {
                    b.Navigation("Menus");

                    b.Navigation("NewFoods");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.Menu", b =>
                {
                    b.Navigation("MenuDetails");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.Offer", b =>
                {
                    b.Navigation("OfferParts");

                    b.Navigation("OfferProcess");

                    b.Navigation("OfferProjectDocuments");

                    b.Navigation("OfferTechnicalByOffers");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.OfferCostCategory", b =>
                {
                    b.Navigation("OfferMaterials");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.OfferMessages", b =>
                {
                    b.Navigation("OfferMessagesDetail");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.OfferPart", b =>
                {
                    b.Navigation("OfferCalculates");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.OfferTerminSub", b =>
                {
                    b.Navigation("OfferTerminDetails");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.OutWaybill2", b =>
                {
                    b.Navigation("OutWaybillChanges");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.Pattern", b =>
                {
                    b.Navigation("PatternProjectElementTypes");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.Person", b =>
                {
                    b.Navigation("PersonBonuses");

                    b.Navigation("PersonSalaries");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.PersonPermissionType", b =>
                {
                    b.Navigation("PersonPermissions");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.PmCalculate", b =>
                {
                    b.Navigation("PMProjectElementDetails");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.ProductManifact2", b =>
                {
                    b.Navigation("ProductManifactDetail");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.ProductManifactDetail", b =>
                {
                    b.Navigation("ProductManifactDetailImages");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.ProductPlan", b =>
                {
                    b.Navigation("ProductPlanSubPlanned");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.ProductPlanDailyPlanned", b =>
                {
                    b.Navigation("ProductPlanProductPlanned");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.ProductPlanSubPlanned", b =>
                {
                    b.Navigation("ProductPlanDailyPlanned");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.ProjectModuleSub", b =>
                {
                    b.Navigation("ProductionDrawings");

                    b.Navigation("ProjectModuleStatus");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.Stock", b =>
                {
                    b.Navigation("StockChanges");
                });

            modelBuilder.Entity("HrProject.Domain.Entities.StockSub", b =>
                {
                    b.Navigation("StockChanges");
                });
#pragma warning restore 612, 618
        }
    }
}
